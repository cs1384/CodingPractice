Good quesiton: lc041



1. two pointer

Sorted array to find a sum -> two pointers from head and rear, this will take O(N) instead of O(NlogN) which is to
fix on an index and binary search for the corresponding index

ex. lc001_two_sum, lc011_Container_With_Most_Water

2. String comparison (evne to itself) -> DP

ex. lc005_Longest_Palindromic_Substring

3. How to check integer boundary

if(res<0 && Integer.MIN_VALUE/10>res) return 0;
if(res>0 && Integer.MAX_VALUE/10<res) return 0;

ex. lc007_Reverse_Integer

4. get all results -> DFS

5. linked list fixed distance -> fast and slow pointer

6. ascending to descending order -> reverse

ex. lc031_Next_Permutation

7. solve in place -> need to know the position of holding element

8. no duplicate -> sort the array

ex. lc047_Permutations_II

9. ArrayList removes last faster than LinkedList


